name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build and Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: Install dependencies
        run: go mod download

      - name: Clean caches
        run: make clean

      - name: Run unit tests
        run: make unit

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - "5432:5432"
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      DATABASE_HOST: localhost
      DATABASE_PORT: "5432"
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: testdb
      JWT_SECRET: testsecret
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              exit 0;
            fi;
            sleep 5;
          done;
          exit 1

      - name: Apply database migrations
        run: |
          psql -h localhost -p 5432 -U postgres -d testdb -f migrations/init.sql
        env:
          PGPASSWORD: postgres

      - name: Run integration tests with Docker
        run: make integration

  golangci-lint:
    name: lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: 1.22
      - name: Install dependencies
        run: go mod download
      - name: Run go mod tidy
        run: go mod tidy
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60